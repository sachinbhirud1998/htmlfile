version: 0.2

phases:
  install:
    commands:
      - echo "Installing dependencies..."
      - apt-get update -y && apt-get install -y apt-transport-https ca-certificates curl
      - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -
      - add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
      - apt-get update -y && apt-get install -y docker-ce docker-ce-cli containerd.io

  pre_build:
    commands:
      - echo "Checking AWS region variables..."
      - echo "AWS_DEPLOY_REGIONS_w: $AWS_DEPLOY_REGIONS_w"
      - echo "AWS_DEPLOY_REGIONS_e: $AWS_DEPLOY_REGIONS_e"
      - export AWS_DEPLOY_REGIONS_w=$(echo "$AWS_DEPLOY_REGIONS_w" | tr -d '[:space:]')
      - export AWS_DEPLOY_REGIONS_e=$(echo "$AWS_DEPLOY_REGIONS_e" | tr -d '[:space:]')
      - echo "Logging in to Amazon ECR..."
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com

  build:
    commands:
      - echo "Building Docker image..."
      - export IMAGE_TAG=$(date +%Y%m%d%H%M%S)
      - export IMAGE_URI=${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${IMAGE_REPO_NAME}:$IMAGE_TAG
      - docker build -t "$IMAGE_URI" .
      - echo "Tagging Docker image..."
      - docker tag "$IMAGE_URI" ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${IMAGE_REPO_NAME}:latest

  post_build:
    commands:
      - echo "Pushing Docker image..."
      - docker push ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${IMAGE_REPO_NAME}:$IMAGE_TAG
      - docker push ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${IMAGE_REPO_NAME}:latest
      - echo "Updating Kubernetes deployment..."
      - aws eks update-kubeconfig --region $AWS_DEFAULT_REGION --name my-cluster-$AWS_DEFAULT_REGION --alias my-cluster-$AWS_DEFAULT_REGION
      - kubectl set image deployment/my-deployment my-container=${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${IMAGE_REPO_NAME}:$IMAGE_TAG --record
      - kubectl rollout status deployment/my-deployment --timeout=90s
      - echo "Writing image definitions file..."
      - printf '[{\"name\":\"%s\",\"imageUri\":\"%s\"}]' "${IMAGE_REPO_NAME}" "$IMAGE_URI" > imagedefinitions.json
      - cat imagedefinitions.json

artifacts:
  files:
    - imagedefinitions.json
